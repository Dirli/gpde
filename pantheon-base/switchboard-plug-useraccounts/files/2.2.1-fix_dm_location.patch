--- /src/Widgets/UserListBox.vala	2019-03-15 19:51:19.000000000 +0300
+++ /src/Widgets/UserListBox.vala	2019-03-17 15:25:54.761530500 +0300
@@ -24,7 +24,7 @@
         private Gtk.ListBoxRow guest_session_row;
         private Gtk.Label guest_description_label;
 
-        construct { 
+        construct {
             selection_mode = Gtk.SelectionMode.SINGLE;
             get_usermanager ().user_added.connect (update_ui);
             get_usermanager ().user_removed.connect (update_ui);
@@ -110,17 +110,38 @@
         }
 
         private static string get_display_manager () {
-            string output = "";
+            string file = "/etc/systemd/system/display-manager.service";
 
-            try {
-                //TODO: add file location for different, non-debian-based distros
-                FileUtils.get_contents ("/etc/X11/default-display-manager", out output);
-            } catch (Error e) {
-                critical (e.message);
+            if (FileUtils.test(file, FileTest.IS_REGULAR)) {
+                Regex regex = new Regex ("^ExecStart");
+                string read_content = "";
+                string output = "";
+
+                try {
+                    FileUtils.get_contents (file, out read_content);
+                } catch (Error e) {
+                    warning (e.message);
+                    return "";
+                }
+
+                var content_array = read_content.split ("\n");
+                foreach (string line in content_array) {
+                    if (regex.match (line)) {
+                        output = line;
+                        break;
+                    }
+                }
+
+                if (output.index_of ("/") != -1) {
+                    output = output.slice (output.last_index_of ("/") + 1, output.length).chomp ();
+                } else if (output.index_of ("=") != -1) {
+                    output = output.slice (output.last_index_of ("=") + 1, output.length).chomp ();
+                }
+
+                return output;
+            } else {
                 return "";
             }
-
-            return output.slice (output.last_index_of ("/") + 1, output.length).chomp ();
         }
     }
 }
